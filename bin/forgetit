#! /usr/bin/env python

from forget import todo
from optparse import OptionParser
import evernote.edam.notestore.NoteStore as NoteStore
import evernote.edam.userstore.UserStore as UserStore
import os
import thrift.protocol.TBinaryProtocol as TBinaryProtocol
import thrift.transport.THttpClient as THttpClient

arg_parser = OptionParser()
arg_parser.add_option('-d', '--day', action="store_true")
arg_parser.add_option('-3', '--three-day', action="store_true")
arg_parser.add_option('-w', '--week', action="store_true")
arg_parser.add_option('-m', '--month', action="store_true")
(options, args) = arg_parser.parse_args()

authtoken = file(os.path.expanduser("~/evernote.token")).read()

userStoreHttpClient = THttpClient.THttpClient("https://www.evernote.com/edam/user")
userStoreProtocol = TBinaryProtocol.TBinaryProtocol(userStoreHttpClient)
userStore = UserStore.Client(userStoreProtocol)

noteStoreUrl = userStore.getNoteStoreUrl(authtoken)

noteStoreHttpClient = THttpClient.THttpClient(noteStoreUrl)
noteStoreProtocol = TBinaryProtocol.TBinaryProtocol(noteStoreHttpClient)
noteStore = NoteStore.Client(noteStoreProtocol)

list = todo.List(noteStore, authtoken)

if len(args) > 0:
    if options.three_day:
        print "Adding \"{0}\" as a 3 day task.".format(args[0])
        list.add_3_day_task(args[0])
    elif options.week:
        print "Adding \"{0}\" as a 1 week task.".format(args[0])
        list.add_1_week_task(args[0])
    elif options.month:
        print "Adding \"{0}\" as a 1 month task.".format(args[0])
        list.add_1_month_task(args[0])
    else:
        print "Adding \"{0}\" as a 1 day task.".format(args[0])
        list.add_1_day_task(args[0])

    print ""

delete_count = list.delete_expired()
if delete_count:
    print "!! Deleted {0} expired tasks !!".format(args[0])
for note in list.tasks_by_expiration():
    print "  * {0} (Expires: {1})".format(note.title, list.task_expiration_date(note))



